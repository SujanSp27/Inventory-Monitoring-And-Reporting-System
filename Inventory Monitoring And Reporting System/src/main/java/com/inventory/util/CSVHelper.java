package com.inventory.util;

import com.inventory.model.product;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

public class CSVHelper {
    private static final String REPORT_DIR = "reports/";

    // ✅ Generate Product Report
    public static String generateReport(List<product> products, String generatedBy) {
        try {
            File dir = new File(REPORT_DIR);
            if (!dir.exists()) {
                boolean created = dir.mkdirs(); // ✅ check the result
                if (!created) {
                    System.out.println("⚠️ Failed to create reports directory!");
                    return null;
                }
            }

            // Create report filename with timestamp
            String fileName = REPORT_DIR + "inventory_report_" +
                    new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date()) + ".csv";

            try (PrintWriter writer = new PrintWriter(new FileWriter(fileName))) {

                // Header section
                writer.println("=== Inventory Report ===");
                writer.println("Generated By: " + generatedBy);
                writer.println("Generated On: " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
                writer.println("--------------------------------------------");
                writer.println("ID,Name,Category,Quantity,Price");

                // Write product details
                if (products != null && !products.isEmpty()) {
                    for (product p : products) {
                        writer.println(p.getId() + "," + p.getName() + "," +
                                p.getCategory() + "," + p.getQuantity() + "," + p.getPrice());
                    }
                } else {
                    writer.println("⚠️ No products available.");
                }

                writer.println("--------------------------------------------");
                writer.println("Total Products: " + (products != null ? products.size() : 0));
                return fileName;

            } catch (IOException e) {
                System.out.println("❌ Error writing report: " + e.getMessage());
                return null;
            }

        } catch (Exception e) {
            System.out.println("⚠️ Unexpected error: " + e.getMessage());
            return null;
        }
    }
}
